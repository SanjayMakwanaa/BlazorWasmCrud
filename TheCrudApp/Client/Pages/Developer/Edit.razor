@page "/developer/edit/{developerId:int}"
@inject HttpClient http
@inject NavigationManager uriHelper
@inject IJSRuntime js

<h3>Edit</h3>

<Form ButtonText="Update" dev="dev"
      OnValidSubmit="@EditDeveloper" />

@code {
    [Parameter] public int developerId { get; set; }
    Developer dev = new Developer();

    protected async override Task OnParametersSetAsync()
    {
        dev = await http.GetFromJsonAsync<Developer>($"api/developer/{developerId}");
    }

    async Task EditDeveloper()
    {
        try
        {
            await http.PutAsJsonAsync("api/developer", dev);
            await js.InvokeVoidAsync("swal", "Success", "Updated Successfully!", "success");
            uriHelper.NavigateTo("developer");
        }
        catch (Exception ex)
        {
            await js.InvokeVoidAsync("swal", "Error", $"Failed to update developer. Error: {ex.Message}", "error");
        }
    }

}